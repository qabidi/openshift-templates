{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": 
    "name": "nucleus",
    "annotations": {
      "openshift.io/display-name": "nucleus",
      "description": "nucleus: The GOCloud network inventory DB",
      "tags": "nucleus,python,django",
      "iconClass": "icon-python",
      "openshift.io/long-description": "This template deploys gunicorn, django, nucleus and a postgres database.",
      "openshift.io/provider-display-name": "ontario.ca",
      "openshift.io/documentation-url": "https://goclouddevops.visualstudio.com/VMware/_git/OPCSWP/",
      "openshift.io/support-url": "https://goclouddevops.visualstudio.com/VMware/_git/OPCSWP/",
      "template.openshift.io/bindable": "false"
    }
  },
  "message": "The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://goclouddevops.visualstudio.com/SoftwareDefinedNetwork/_git/nucleus.",
  "labels": {
    "template": "nucleus",
    "app": "nucleus"
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "name": "${NAME}"
        }
      },
      "stringData": {
        "database-user": "${DATABASE_USER}",
        "database-password": "${DATABASE_PASSWORD}",
        "django-secret-key": "${DJANGO_SECRET_KEY}"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-oauth2",
        "annotations": {
          "description": "Service for oauth2 proxy",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${NAME}-oauth2\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "oauth2",
            "port": 4180,
            "targetPort": 4180
          }
        ],
        "selector": {
          "name": "${NAME}-oauth2"
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-nginx",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "nginx",
            "port": 8081,
            "targetPort": 8081
          }
        ],
        "selector": {
          "name": "${NAME}-nginx"
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          },
          {
            "name": "web-dev",
            "port": 5000,
            "targetPort": 5000
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "port": {
          "targetPort": "nginx"
        },
        "to": {
          "kind": "Service",
          "name": "${NAME}-nginx"
        }
      }
    },
    {
      "apiVersion": "image.openshift.io/v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "description": "ImageStream to track docker oauth2 image."
        },
        "generation": 2,
        "name": "oauth2-proxy"
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
              "kind": "DockerImage",
              "name": "bitnami/oauth2-proxy:latest"
            },
            "generation": 2,
            "importPolicy": {
              "scheduled": true
            },
            "name": "latest",
            "referencePolicy": {
              "type": "Source"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "image.openshift.io/v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "description": "ImageStream to track docker nginx image."
        },
        "generation": 2,
        "name": "nginx"
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
              "kind": "DockerImage",
              "name": "docker.io/nginx:stable"
            },
            "generation": 2,
            "importPolicy": {
              "scheduled": true
            },
            "name": "stable",
            "referencePolicy": {
              "type": "Source"
            }
          }
        ]
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-nginx",
        "annotations": {
          "description": "Keeps track of changes in the nginx image"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "1Gi"
          },
          "requests": {
            "cpu": "350m",
            "memory": "1Gi"
          }
        },
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "${NAMESPACE}",
              "name": "python:${PYTHON_VERSION}"
            },
            "env": [
              {
                "name": "PIP_INDEX_URL",
                "value": "${PIP_INDEX_URL}"
              },
              {
                "name": "ENABLE_PIPENV",
                "value": "1"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          }
        ]
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-nginx",
        "annotations": {
          "description": "Defines how to build the nginx reverse proxy",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "1Gi"
          },
          "requests": {
            "cpu": "250m",
            "memory": "1Gi"
          }
        },
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}/docker/nginx"
        },
        "strategy": {
          "type": "Docker",
          "dockerStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "nginx:stable",
              "dockerfilePath": "Dockerfile"
            }
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}-nginx:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          }
        ]
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate",
          "recreateParams": {
            "post": {
              "failurePolicy": "Abort",
              "execNewPod": {
                "command": [
                  "python",
                  "manage.py",
                  "collectstatic",
                  "--noinput"
                ],
                "container": "${NAME}",
                "volumes": [
                  "${NAME}-staticfiles"
                ]
              }
            }
          }
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "nucleus-web"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "${NAME}-staticfiles",
                "persistentVolumeClaim": {
                  "claimName": "${NAME}-staticfiles-claim"
                }
              }
            ],
            "containers": [
              {
                "name": "nucleus-web",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "${NAME}-staticfiles",
                    "mountPath": "/opt/app-root/src/static"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "DATABASE_ENGINE",
                    "value": "${DATABASE_ENGINE}"
                  },
                  {
                    "name": "DATABASE_NAME",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "DATABASE_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "DATABASE_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "APP_CONFIG",
                    "value": "${APP_CONFIG}"
                  },
                  {
                    "name": "DJANGO_SECRET_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}",
                        "key": "django-secret-key"
                      }
                    }
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "1",
                    "memory": "${NUCLEUS_MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "350m",
                    "memory": "${NUCLEUS_MEMORY_REQUEST}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-oauth2",
        "annotations": {
          "description": "Defines how to deploy the oauth2 proxy server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "nucleus-oauth2"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "oauth2-proxy:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}-oauth2"
        },
        "template": {
          "metadata": {
            "name": "${NAME}-oauth2",
            "labels": {
              "name": "${NAME}-oauth2"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "nucleus-oauth2",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 4180
                  }
                ],
                "env": [
                  {
                    "name": "OAUTH2_PROXY_COOKIE_SECRET",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "oauth2-cookie-secret",
                        "key": "cookie-secret"
                      }
                    }
                  },
                  {
                    "name": "OAUTH2_PROXY_CLIENT_SECRET",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "oauth2-client-secret",
                        "key": "client-secret"
                      }
                    }
                  },
                  {
                    "name": "OAUTH2_PROXY_CLIENT_ID",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "oauth2-client-id",
                        "key": "client-id"
                      }
                    }
                  },
                  {
                    "name": "OAUTH2_PROXY_EMAIL_DOMAINS",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "oauth2-email-domains",
                        "key": "email-domains"
                      }
                    }
                  },
                  {
                    "name": "OAUTH2_PROXY_PROVIDER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "oauth2-proxy-provider",
                        "key": "proxy-provider"
                      }
                    }
                  },
                  {
                    "name": "OAUTH2_PROXY_GCP_HEALTHCHECKS",
                    "value": "true"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/readiness_check",
                    "port": 4180
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/liveness_check",
                    "port": 4180
                  }
                },
                "resources": {
                  "limits": {
                    "cpu": "1",
                    "memory": "${OAUTH2_MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "${OAUTH2_MEMORY_REQUEST}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-nginx",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "nucleus-nginx"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}-nginx:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}-nginx"
        },
        "template": {
          "metadata": {
            "name": "${NAME}-nginx",
            "labels": {
              "name": "${NAME}-nginx"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "${NAME}-staticfiles",
                "persistentVolumeClaim": {
                  "claimName": "${NAME}-staticfiles-claim"
                }
              }
            ],
            "containers": [
              {
                "name": "nucleus-nginx",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8081
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "${NAME}-staticfiles",
                    "mountPath": "/opt/www/static"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 8081
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/",
                    "port": 8081
                  }
                },
                "resources": {
                  "limits": {
                    "cpu": "1",
                    "memory": "${NGINX_MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "${NGINX_MEMORY_REQUEST}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "labels": {
          "name": "${NAME}"
        }
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-staticfiles-claim",
        "labels": {
          "name": "${NAME}"
        }
      },
      "spec": {
        "accessModes": [
          "ReadWriteMany"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "postgresql",
            "port": 5432,
            "targetPort": 5432
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "postgresql"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${NAMESPACE}",
                "name": "postgresql:${POSTGRESQL_VERSION}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "labels": {
              "name": "${DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${DATABASE_SERVICE_NAME}"
                }
              }
            ],
            "containers": [
              {
                "name": "postgresql",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 5432
                  }
                ],
                "env": [
                  {
                    "name": "POSTGRESQL_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_DATABASE",
                    "value": "${DATABASE_NAME}"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/pgsql/data"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 5,
                  "exec": {
                    "command": [
                      "/usr/libexec/check-container"
                    ]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 10,
                  "initialDelaySeconds": 120,
                  "exec": {
                    "command": [
                      "/usr/libexec/check-container",
                      "--live"
                    ]
                  }
                },
                "resources": {
                  "limits": {
                    "cpu": "1",
                    "memory": "${POSTGRESQL_MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "400m",
                    "memory": "${POSTGRESQL_MEMORY_REQUEST}"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "nucleus-web"
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "required": true,
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "value": "openshift"
    },
    {
      "name": "PYTHON_VERSION",
      "displayName": "Version of Python Image",
      "description": "Version of Python image to be used (3.6 or latest).",
      "value": "latest",
      "required": true
    },
    {
      "name": "POSTGRESQL_VERSION",
      "displayName": "Version of PostgreSQL Image",
      "description": "Version of PostgreSQL image to be used (10 or latest).",
      "value": "latest",
      "required": true
    },
    {
      "name": "NUCLEUS_MEMORY_LIMIT",
      "displayName": "Nucleus Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the Django container can use.",
      "value": "1Gi"
    },
    {
      "name": "NUCLEUS_MEMORY_REQUEST",
      "displayName": "Memory Request (Nucleus/Django)",
      "required": true,
      "description": "Requested amount of memory the PostgreSQL container can use.",
      "value": "1Gi"
    },
    {
      "name": "OAUTH2_MEMORY_LIMIT",
      "displayName": "oauth2-proxy Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the oauth2-proxy container can use.",
      "value": "1Gi"
    },
    {
      "name": "OAUTH2_MEMORY_REQUEST",
      "displayName": "Memory Request (oauth2-proxy)",
      "required": true,
      "description": "Requested amount of memory the oauth2-proxy container can use.",
      "value": "128Mi"
    },
    {
      "name": "NGINX_MEMORY_LIMIT",
      "displayName": "NGINX Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the nginx container can use.",
      "value": "1Gi"
    },
    {
      "name": "NGINX_MEMORY_REQUEST",
      "displayName": "Memory Request (NGINX)",
      "required": true,
      "description": "Requested amount of memory the nginx container can use.",
      "value": "512Mi"
    },
    {
      "name": "POSTGRESQL_MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the Django container can use.",
      "value": "3Gi"
    },
    {
      "name": "POSTGRESQL_MEMORY_REQUEST",
      "displayName": "Memory Request (PostgreSQL)",
      "required": true,
      "description": "Requested amount of memory the PostgreSQL container can use.",
      "value": "256Mi"
    },
    {
      "name": "VOLUME_CAPACITY",
      "displayName": "Volume Capacity",
      "description": "Volume space available for data, e.g. 512Mi, 2Gi",
      "value": "5Gi",
      "required": true
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Git Repository URL",
      "required": true,
      "description": "The URL of the repository with your application source code.",
      "value": "https://goclouddevops.visualstudio.com/SoftwareDefinedNetwork/_git/nucleus"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Django service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "required": true,
      "value": "postgresql"
    },
    {
      "name": "DATABASE_ENGINE",
      "displayName": "Database Engine",
      "required": true,
      "description": "Database engine: postgresql, mysql or sqlite (default).",
      "value": "postgresql"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "value": "default"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "Database Username",
      "required": true,
      "value": "django"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "Database User Password",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "APP_CONFIG",
      "displayName": "Application Configuration File Path",
      "description": "Relative path to Gunicorn configuration file (optional)."
    },
    {
      "name": "DJANGO_SECRET_KEY",
      "displayName": "Django Secret Key",
      "description": "Set this to a long random string.",
      "generate": "expression",
      "from": "[\\w]{50}"
    },
    {
      "name": "PIP_INDEX_URL",
      "displayName": "Custom PyPi Index URL",
      "description": "The custom PyPi index URL",
      "value": ""
    }
  ]
}
